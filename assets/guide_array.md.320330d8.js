import{_ as a,c as s,o as e,a as n}from"./app.27166a12.js";const h=JSON.parse('{"title":"\u6570\u7EC4\u65B9\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"isNaN()","slug":"isnan"}],"relativePath":"guide/array.md","lastUpdated":1664276472000}'),t={name:"guide/array.md"},l=n(`<h1 id="\u6570\u7EC4\u65B9\u6CD5" tabindex="-1">\u6570\u7EC4\u65B9\u6CD5 <a class="header-anchor" href="#\u6570\u7EC4\u65B9\u6CD5" aria-hidden="true">#</a></h1><h2 id="isnan" tabindex="-1">isNaN() <a class="header-anchor" href="#isnan" aria-hidden="true">#</a></h2><p>isNaN (val) \u5224\u65AD\u662F\u5426\u975E\u6570\u503C\uFF0C\u5982\u679C value \u662F\u4E00\u4E2A NaN\uFF0C\u90A3\u4E48\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">expect(mmqUtils.isNaN(&#39;NAN&#39;)).toEqual(false)</span></span>
<span class="line"><span style="color:#A6ACCD;">expect(mmqUtils.isNaN(/\\d/)).toEqual(false)</span></span>
<span class="line"><span style="color:#A6ACCD;">expect(mmqUtils.isNaN(NaN)).toEqual(true)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,4),r=[l];function i(c,o,p,d,_,N){return e(),s("div",null,r)}const m=a(t,[["render",i]]);export{h as __pageData,m as default};
